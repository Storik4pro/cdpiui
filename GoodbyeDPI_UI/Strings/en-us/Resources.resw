<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutButton.Content" xml:space="preserve">
    <value>About</value>
    <comment>About program header</comment>
  </data>
  <data name="AboutPageTextBlock.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddButton.Content" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AdditionalSettings.Text" xml:space="preserve">
    <value>Additional settings</value>
  </data>
  <data name="AddNewComponentFromTheStoreTextBlock.Text" xml:space="preserve">
    <value>Add new component from the Store</value>
  </data>
  <data name="AddOnNotInstalled" xml:space="preserve">
    <value>AddOn "{0}" with Id "{1}" not installed. Continuation is impossible.
Please, install lates version of "{0}" in Store</value>
  </data>
  <data name="AppRunnedInTrayToast.Content" xml:space="preserve">
    <value>Application is runed in system tray</value>
  </data>
  <data name="AppUpdatesToast.Content" xml:space="preserve">
    <value>Updates are available for this application</value>
  </data>
  <data name="AutorunButton.Header" xml:space="preserve">
    <value>Open application with PC startup</value>
  </data>
  <data name="AvailableActions" xml:space="preserve">
    <value>[Proposed actions]</value>
  </data>
  <data name="AvailableActionsButton.Content" xml:space="preserve">
    <value>[Proposed actions]</value>
  </data>
  <data name="AvailableActionsTip" xml:space="preserve">
    <value>Help is not available at the moment</value>
  </data>
  <data name="BasicTextBlock.Text" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="BeginNewSelectionTextBlock.Text" xml:space="preserve">
    <value>Begin new selection</value>
  </data>
  <data name="Calculating" xml:space="preserve">
    <value>Calculating...</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelButton.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CheckForUpdates" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="CheckingForUpdates" xml:space="preserve">
    <value>Installing updates</value>
  </data>
  <data name="ChooseExistOnLocalPCTextBlock.Text" xml:space="preserve">
    <value>Choose existed on this PC</value>
  </data>
  <data name="ChooseSiteList" xml:space="preserve">
    <value>Select site list</value>
  </data>
  <data name="CleanModeMenuItem.Text" xml:space="preserve">
    <value>Clean Output</value>
  </data>
  <data name="CleanupModeMenuItem.Text" xml:space="preserve">
    <value>Output Cleanup Mode</value>
  </data>
  <data name="ClickNextToBegin.Text" xml:space="preserve">
    <value>Click "Next" button to continue</value>
  </data>
  <data name="ColorSelector.Header" xml:space="preserve">
    <value>Choose an accent color in PC settings </value>
  </data>
  <data name="ComponentSelector.Description" xml:space="preserve">
    <value>The component that should be used by default</value>
  </data>
  <data name="ComponentSelector.Header" xml:space="preserve">
    <value>Used component</value>
  </data>
  <data name="ComponentSettingsPageHeader" xml:space="preserve">
    <value>{0} component settings</value>
  </data>
  <data name="ConfigSettingsCard.Description" xml:space="preserve">
    <value>Choose ready-to-use config for startup this component</value>
  </data>
  <data name="ConfigSettingsCard.Header" xml:space="preserve">
    <value>Startup config</value>
  </data>
  <data name="ConfirmationRequired" xml:space="preserve">
    <value>Confirmation required</value>
  </data>
  <data name="ContinuationImpossible" xml:space="preserve">
    <value>Continuation impossible</value>
  </data>
  <data name="CreateConfigHelperSettingsCard.Description" xml:space="preserve">
    <value>Create new config. Edit exiting config. Import config from .bat/.json file</value>
  </data>
  <data name="CreateConfigHelperSettingsCard.Header" xml:space="preserve">
    <value>Config edit+create manager</value>
  </data>
  <data name="CreateConfigHelperTitleTextBlock.Text" xml:space="preserve">
    <value>Config edit+create manager</value>
  </data>
  <data name="CreateConfigHelperWindowTitle" xml:space="preserve">
    <value>Config edit+create manager</value>
  </data>
  <data name="CreateConfigTextBlock.Text" xml:space="preserve">
    <value>Create your own config</value>
  </data>
  <data name="CreateConfigUtilSettingsCard.Description" xml:space="preserve">
    <value>Automatic selection settings for Zapret, ByeDPI, GoodbyeDPI. Graphic config builder.</value>
  </data>
  <data name="CreateConfigUtilSettingsCard.Header" xml:space="preserve">
    <value>Easy&amp;Quick config create utility</value>
  </data>
  <data name="CreateConfigUtilWindowTitle" xml:space="preserve">
    <value>Easy&amp;Quick config create utility</value>
  </data>
  <data name="CreateConfigUtilWindowTitleTextBlock.Text" xml:space="preserve">
    <value>Easy&amp;Quick config create utility</value>
  </data>
  <data name="CreateNewConfigViaGoodCheckTextBlock.Text" xml:space="preserve">
    <value>Create new config via GoodCheck</value>
  </data>
  <data name="CreateNewTextBlock.Text" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="CurrentVersion" xml:space="preserve">
    <value>Current version: {0}</value>
  </data>
  <data name="DarkTheme" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="DeleteButton.Text" xml:space="preserve">
    <value>Delete from device</value>
  </data>
  <data name="DescriptionTextBlock.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DetailsTextBlock.Text" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Downloading" xml:space="preserve">
    <value>Downloading</value>
  </data>
  <data name="DownloadsButton.Content" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="EditSiteListButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Edit site list</value>
  </data>
  <data name="EditTextBlock.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ElementNotExistMessage" xml:space="preserve">
    <value>Element with id "{0}" not exits. Check your connection, clear Store cache and try again later {1}</value>
  </data>
  <data name="ElementNotExistTitle" xml:space="preserve">
    <value>Element not exist</value>
  </data>
  <data name="EmptyPageDescription.Text" xml:space="preserve">
    <value>Looks like you don't have any config for this component. Just create new config or get it from Store</value>
  </data>
  <data name="EmptyPageTitle.Text" xml:space="preserve">
    <value>It's so lonely on this page...</value>
  </data>
  <data name="en-us" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="ErrorHappens" xml:space="preserve">
    <value>Exception happens</value>
  </data>
  <data name="ErrorInformationTextBlock.Text" xml:space="preserve">
    <value>We're collect some information about this problem:</value>
  </data>
  <data name="ErrorOccurred" xml:space="preserve">
    <value>Exception happens</value>
  </data>
  <data name="ExceptionHappensTextBlock.Text" xml:space="preserve">
    <value>Exception happens —</value>
  </data>
  <data name="ExitButton.Content" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExitMenuItem.Text" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExploreComponentsInStoreButton.Header" xml:space="preserve">
    <value>Explore new components in Store</value>
  </data>
  <data name="ExploreInStore.Text" xml:space="preserve">
    <value>Explore something new in the Store</value>
  </data>
  <data name="ExternalLinksTextBlock.Text" xml:space="preserve">
    <value>Links on other Internet-resources</value>
  </data>
  <data name="FileMenuItem.Title" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FileSaveErrorMessage" xml:space="preserve">
    <value>File "{0}" couldn't be saved. {1}</value>
  </data>
  <data name="Finishing" xml:space="preserve">
    <value>Finishing</value>
  </data>
  <data name="FontContentDialog.PrimaryButtonText" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="FontContentDialog.SecondaryButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="FontContentDialog.Title" xml:space="preserve">
    <value>Font Settings</value>
  </data>
  <data name="FontMenuItem.Text" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="FontSizeTextBlock.Text" xml:space="preserve">
    <value>Font size</value>
  </data>
  <data name="Get" xml:space="preserve">
    <value>Get</value>
  </data>
  <data name="GetHelpButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get help</value>
  </data>
  <data name="GetHelpTextBlock.Text" xml:space="preserve">
    <value>Get help</value>
  </data>
  <data name="GettingReady" xml:space="preserve">
    <value>Getting ready</value>
  </data>
  <data name="GettingReadyTextBlock.Text" xml:space="preserve">
    <value>We need to prepare something before we start. It won't take long</value>
  </data>
  <data name="GettingReadyTitleTextBlock.Text" xml:space="preserve">
    <value>Getting ready</value>
  </data>
  <data name="GoBackButton.Content" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="GoForwardButton.Content" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="GoodCheckAdditionalSettingsTip.Text" xml:space="preserve">
    <value>These settings will help you customize the auto-selection experience. When you're ready to continue, simply click "Next"—all settings will be saved automatically.</value>
  </data>
  <data name="GoodCheckAddSiteList.Text" xml:space="preserve">
    <value>Add site list</value>
  </data>
  <data name="GoodCheckAskStopSelection" xml:space="preserve">
    <value>Are you sure you want to exit this wizard? Selection will be stopped, but you still can view results in Config Edit+Create Manager</value>
  </data>
  <data name="GoodCheckBadStrategy.Text" xml:space="preserve">
    <value>Number of unsuccessful strategies (Less than 65%):</value>
  </data>
  <data name="GoodCheckConfigSelectionTextBlock.Text" xml:space="preserve">
    <value>GoodCheck config selection</value>
  </data>
  <data name="GoodCheckCurrentSelection.Text" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="GoodCheckEmptySiteListsTip1.Text" xml:space="preserve">
    <value>To continue, please select at least one site list...</value>
  </data>
  <data name="GoodCheckEmptySiteListsTip2.Text" xml:space="preserve">
    <value>...unfortunately drag&amp;drop not available for this field</value>
  </data>
  <data name="GoodCheckGoodStrategy.Text" xml:space="preserve">
    <value>Number of successful strategies (More than 65%):</value>
  </data>
  <data name="GoodCheckKillAllProcessButton.Content" xml:space="preserve">
    <value>Kill all selection</value>
  </data>
  <data name="GoodCheckKillCurrentProcessButton.Content" xml:space="preserve">
    <value>Kill only current process</value>
  </data>
  <data name="GoodCheckSelectionComplete.Text" xml:space="preserve">
    <value>Selection complete</value>
  </data>
  <data name="GoodCheckSelectionCompleteTip.Text" xml:space="preserve">
    <value>Click on the "Next" button to view selection report.</value>
  </data>
  <data name="GoodCheckSelectionNow.Text" xml:space="preserve">
    <value>Now worked on:</value>
  </data>
  <data name="GoodCheckSelectionPercent.Text" xml:space="preserve">
    <value>Percentage of work completed:</value>
  </data>
  <data name="GoodCheckSelectionTime.Text" xml:space="preserve">
    <value>Estimated time remaining</value>
  </data>
  <data name="GoodCheckSelectionTitle.Text" xml:space="preserve">
    <value>Startup parameters selection</value>
  </data>
  <data name="GoodCheckSelectionWaitTextBlock.Text" xml:space="preserve">
    <value>This process will take a while. Sit back and relax.</value>
  </data>
  <data name="GoodCheckSelectSeparatelly.Content" xml:space="preserve">
    <value>Select for each list of sites separately</value>
  </data>
  <data name="GoodCheckSelectSiteListFromTemplate.Text" xml:space="preserve">
    <value>Choose site list from available templates</value>
  </data>
  <data name="GoodCheckSelectSiteLists.Text" xml:space="preserve">
    <value>Select the lists of websites for which you want to perform automatic selection. You also can create new site list</value>
  </data>
  <data name="GoodCheckSelectSiteListsTitle.Text" xml:space="preserve">
    <value>Selecting site lists</value>
  </data>
  <data name="GoodCheckStrategyListChooseSettingCard.Description" xml:space="preserve">
    <value>Please ensure that your connection standard matches the connection specified in the strategy list title. For example, IPv6 strategies may not work with an IPv4 network.</value>
  </data>
  <data name="GoodCheckStrategyListChooseSettingCard.Header" xml:space="preserve">
    <value>List of strategies to test</value>
  </data>
  <data name="GoodCheckStrategyListChooseTip1.Text" xml:space="preserve">
    <value>Select a list of strategies to select</value>
  </data>
  <data name="GoodCheckStrategyListChooseTip2.Text" xml:space="preserve">
    <value>You can also enable the selection mode for each site list separately. This will significantly increase the overall selection time, but the final strategy may perform better.</value>
  </data>
  <data name="GoodCheckStrategyListChooseTitle.Text" xml:space="preserve">
    <value>Selecting a list of strategies</value>
  </data>
  <data name="GoodCheckWizardTip.Text" xml:space="preserve">
    <value>This wizard will help you select launch parameters for selected sites.</value>
  </data>
  <data name="HelpButton.Content" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpMenuItem.Title" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpSupportTitle.Text" xml:space="preserve">
    <value>Help+Support</value>
  </data>
  <data name="HomeButton.Content" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HomeTextBlock.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="Installed" xml:space="preserve">
    <value>Installed</value>
  </data>
  <data name="Installing" xml:space="preserve">
    <value>Installing</value>
  </data>
  <data name="InstallUpdates" xml:space="preserve">
    <value>Download and install updates</value>
  </data>
  <data name="LanguageSelector.Description" xml:space="preserve">
    <value>You may need to restart application for apply localization settings to every element</value>
  </data>
  <data name="LanguageSelector.Header" xml:space="preserve">
    <value>Application language</value>
  </data>
  <data name="LatestVersionInstalled" xml:space="preserve">
    <value>Latest version installed</value>
  </data>
  <data name="LibraryButton.Content" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="LightTheme" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="LocalData" xml:space="preserve">
    <value>Local user data</value>
  </data>
  <data name="MessageFromDeveloper" xml:space="preserve">
    <value>Message from developer</value>
  </data>
  <data name="MessageFromDeveloperTextBlock.Text" xml:space="preserve">
    <value>Message from developer</value>
  </data>
  <data name="MessageFromDeveloperTip" xml:space="preserve">
    <value>The developer deemed it necessary to provide this information. This could be a warning or simply information the developer wanted to draw attention to.</value>
  </data>
  <data name="NewestVersionInstalled" xml:space="preserve">
    <value>All updates are installed</value>
  </data>
  <data name="NewVersionAvailable" xml:space="preserve">
    <value>New version available</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoComponent" xml:space="preserve">
    <value>Component not selected</value>
  </data>
  <data name="NotificationSettingsExpander.Description" xml:space="preserve">
    <value>Fine-tune notifications</value>
  </data>
  <data name="NotificationSettingsExpander.Header" xml:space="preserve">
    <value>Notification settings</value>
  </data>
  <data name="NowSelectedComponent" xml:space="preserve">
    <value>Now selected: {0}</value>
  </data>
  <data name="OfflineHelpSettingsCard.Header" xml:space="preserve">
    <value>Offline help</value>
  </data>
  <data name="OpenConfigHelperTextBlock.Text" xml:space="preserve">
    <value>Config edit+create manager</value>
  </data>
  <data name="OpenLogsFolderTextBlock.Text" xml:space="preserve">
    <value>Open logs folder</value>
  </data>
  <data name="OriginalModeMenuItem.Text" xml:space="preserve">
    <value>Original Output</value>
  </data>
  <data name="ORSeparatorTextBlock.Text" xml:space="preserve">
    <value>--OR--</value>
    <comment>--&lt;localized string, for example "OR"&gt;--</comment>
  </data>
  <data name="OtherTextBlock.Text" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending...</value>
  </data>
  <data name="PersonalizationSettingsExpander.Description" xml:space="preserve">
    <value>Choose theme&amp;accent color for this application</value>
  </data>
  <data name="PersonalizationSettingsExpander.Header" xml:space="preserve">
    <value>Current theme</value>
  </data>
  <data name="PersonalizeTextBlock.Text" xml:space="preserve">
    <value>Personalization</value>
  </data>
  <data name="PreviewTextBlock.Text" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="ProceesRaisedException" xml:space="preserve">
    <value>"{0}" process raised exception</value>
  </data>
  <data name="ProcessMenuItem.Title" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="ProcessStarted" xml:space="preserve">
    <value>Process started</value>
  </data>
  <data name="ProcessStartedMessageMessage" xml:space="preserve">
    <value>"{0}" process successfully launched and running</value>
  </data>
  <data name="ProcessStartedMessageTitle" xml:space="preserve">
    <value>Process running now</value>
  </data>
  <data name="ProcessStateToast.Content" xml:space="preserve">
    <value>Process state changed (Runed/Stopped)</value>
  </data>
  <data name="ProcessStopped" xml:space="preserve">
    <value>Process stopped</value>
  </data>
  <data name="ProcessStoppedMessageMessage" xml:space="preserve">
    <value>"{0}" process was stopped</value>
  </data>
  <data name="ProcessStoppedMessageTitle" xml:space="preserve">
    <value>Process stopped now</value>
  </data>
  <data name="PseidoconsoleCopyOutputButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Copy output</value>
  </data>
  <data name="PseudoconsoleInternalError" xml:space="preserve">
    <value>Pseudo console internal exception</value>
  </data>
  <data name="PseudoconsoleSettingsCard.Description" xml:space="preserve">
    <value>View current process log. Save process log to file.</value>
  </data>
  <data name="PseudoconsoleSettingsCard.Header" xml:space="preserve">
    <value>Pseudoconsole (View process output)</value>
  </data>
  <data name="PseudoconsoleSettingsCardHeader" xml:space="preserve">
    <value>Pseudoconsole (View process output)</value>
  </data>
  <data name="PseudoconsoleTextBlock.Text" xml:space="preserve">
    <value>Pseudoconsole</value>
  </data>
  <data name="PseudoconsoleWindowTitle" xml:space="preserve">
    <value>Pseudoconsole</value>
  </data>
  <data name="QueueWaiting" xml:space="preserve">
    <value>Queue waiting</value>
  </data>
  <data name="ReinstallButton.Text" xml:space="preserve">
    <value>Reinstall</value>
  </data>
  <data name="RemoveButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveServiceTextBlock.Text" xml:space="preserve">
    <value>Remove service</value>
  </data>
  <data name="RestartMenuItem.Text" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="RetryButton.Content" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="ru" xml:space="preserve">
    <value>Русский (Russian)</value>
  </data>
  <data name="SaveMenuItem.Text" xml:space="preserve">
    <value>Save As...</value>
  </data>
  <data name="SelectComponentToViewVarsTextBlock.Text" xml:space="preserve">
    <value>Select component to see available actions</value>
  </data>
  <data name="ServerVersion" xml:space="preserve">
    <value>Version for update: {0}</value>
  </data>
  <data name="ServiceAskToStopMessage" xml:space="preserve">
    <value>Are you sure you want to forcibly stop the windrivert service?  The driver may still be used by other applications/processes</value>
  </data>
  <data name="ServiceStopException" xml:space="preserve">
    <value>Cannot stop service {0}</value>
  </data>
  <data name="SettingsButton.Content" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsTextBlock.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="ShowMoreSettings.Text" xml:space="preserve">
    <value>Show more settings</value>
  </data>
  <data name="SiteListFileError.Message" xml:space="preserve">
    <value>The list of sites you provided is not a valid list of sites.</value>
  </data>
  <data name="SiteListFileError.Title" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="StopActionButton.ToolTipService.Tooltip" xml:space="preserve">
    <value>Stop downloading</value>
  </data>
  <data name="StopButton.Content" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="StopTipTextBlock.Text" xml:space="preserve">
    <value>Select stop variant</value>
  </data>
  <data name="StopTitleTextBlock.Text" xml:space="preserve">
    <value>Stopping</value>
  </data>
  <data name="StoreDatabaseErrorTextBlock.Text" xml:space="preserve">
    <value>The Store was unable to update the database.</value>
  </data>
  <data name="StoreSettingsCard.Description" xml:space="preserve">
    <value>Explore new Components, Add-Ons, Configs. Check updates for installed items. </value>
  </data>
  <data name="StoreSettingsCard.Header" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="StoreUnavailableTextBlock.Text" xml:space="preserve">
    <value>Unfortunately, the Store is currently unavailable. You can still browse your library, but functionality may be limited.</value>
  </data>
  <data name="StoreUpdatesToast.Content" xml:space="preserve">
    <value>Updates are available for Store items your installed</value>
  </data>
  <data name="StoreUpdatingTextBlock.Text" xml:space="preserve">
    <value>The store needs some updates before you can use it. This won't take long.</value>
  </data>
  <data name="StoreWindowsTitle" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="StoreWindowTitleTextBlock.Text" xml:space="preserve">
    <value>Components Store</value>
  </data>
  <data name="SystemTheme" xml:space="preserve">
    <value>Follow system</value>
  </data>
  <data name="ThemeSelector.Header" xml:space="preserve">
    <value>Choose theme</value>
  </data>
  <data name="UtilsButton.Content" xml:space="preserve">
    <value>Utils</value>
  </data>
  <data name="UtilsTextBlock.Text" xml:space="preserve">
    <value>Utils</value>
  </data>
  <data name="ViewLess" xml:space="preserve">
    <value>View less</value>
  </data>
  <data name="ViewMenuItem.Title" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ViewMore" xml:space="preserve">
    <value>View more</value>
  </data>
  <data name="ViewMoreActionsButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>View more actions</value>
  </data>
  <data name="ViewMoreTextBlock.Text" xml:space="preserve">
    <value>View more</value>
  </data>
  <data name="VisitGitHubPageMenuItem.Text" xml:space="preserve">
    <value>Visit GitHub Page</value>
  </data>
  <data name="WarningTextBlock.Text" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="WhatDoesItMeanTextBlock.Content" xml:space="preserve">
    <value>What does it mean?</value>
  </data>
  <data name="WhatYouWantToDoTextBlock.Text" xml:space="preserve">
    <value>Welcome! What do you want to do?</value>
  </data>
  <data name="WorkingOnIt" xml:space="preserve">
    <value>Work is underway...</value>
  </data>
  <data name="WorkingOnItTextBlock.Text" xml:space="preserve">
    <value>Work is underway...</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YesStopService" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ZapretSettingsTextBlock.Text" xml:space="preserve">
    <value>Zapret component settings</value>
  </data>
  <data name="GoodCheckComponentDirsSetException" xml:space="preserve">
    <value>We can't save some settings, because unexpected exception happens. Please, reinstall Components and AddOns you use in the Store and try again later.</value>
  </data>
  <data name="LibraryTextBlock.Text" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="SetupButton.Content" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="component" xml:space="preserve">
    <value>Component</value>
  </data>
  <data name="configlist" xml:space="preserve">
    <value>Config Kit</value>
  </data>
  <data name="addon" xml:space="preserve">
    <value>AddOn</value>
  </data>
  <data name="CDPIUIUpdateItem" xml:space="preserve">
    <value>Service item</value>
  </data>
  <data name="DownloadsTextBlock.Text" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="CheckForUpdatesTextBlock.Text" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="AvailableUpdatesTextBlock.Text" xml:space="preserve">
    <value>Available updates</value>
  </data>
  <data name="NowDownloadingTextBlock.Text" xml:space="preserve">
    <value>Now downloading</value>
  </data>
  <data name="EmptyViewTextBlock" xml:space="preserve">
    <value>It's loneliness right here...</value>
  </data>
  <data name="HomeMenuItem.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="ImportConfigFromFileMenuItem.Text" xml:space="preserve">
    <value>Import config from file...</value>
  </data>
  <data name="EditConfigMenuItem.Text" xml:space="preserve">
    <value>Edit installed config...</value>
  </data>
  <data name="GoodCheckConfigSelectionMenuItem.Text" xml:space="preserve">
    <value>GoodCheck config selection</value>
  </data>
  <data name="BeginNewSelectionMenuItem.Text" xml:space="preserve">
    <value>Begin new selection</value>
  </data>
  <data name="RecentSelectionsMenuItem.Text" xml:space="preserve">
    <value>Open recent GoodCheck selection report</value>
  </data>
  <data name="XmlReportMenuItem.Text" xml:space="preserve">
    <value>Open .XML report file...</value>
  </data>
  <data name="StoreMenuBarItem.Title" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="StoreOpenComponentsMenuItem.Text" xml:space="preserve">
    <value>Explore new Components</value>
  </data>
  <data name="StoreOpenAddOnsMenuItem.Text" xml:space="preserve">
    <value>Explore new AddOns</value>
  </data>
  <data name="StoreOpenConfigsMenuItem.Text" xml:space="preserve">
    <value>Explore new Config Kits</value>
  </data>
  <data name="StoreOpenMenuItem.Text" xml:space="preserve">
    <value>Open Store</value>
  </data>
  <data name="HelpOfflineMenuItem.Text" xml:space="preserve">
    <value>Open local help</value>
  </data>
  <data name="HelpOnlineMenuItem.Text" xml:space="preserve">
    <value>Open help in Internet</value>
  </data>
  <data name="ReportIssueMenuItem.Text" xml:space="preserve">
    <value>Report a problem</value>
  </data>
  <data name="ReadyTextBlock.Text" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="CreateNewConfigMenuItem.Text" xml:space="preserve">
    <value>Create new config</value>
  </data>
  <data name="OfflineHelpWindowTitle" xml:space="preserve">
    <value>Local help</value>
  </data>
  <data name="OfflineHelpWindowTitleTextBlock.Text" xml:space="preserve">
    <value>Offline help</value>
  </data>
  <data name="SourceTextBlock.Text" xml:space="preserve">
    <value>Source code</value>
  </data>
  <data name="DeveloperTextBlock.Text" xml:space="preserve">
    <value>Developer</value>
  </data>
  <data name="AboutAppTextBlock.Text" xml:space="preserve">
    <value>About this app</value>
  </data>
  <data name="AcknowledgmentsTextBlock.Text" xml:space="preserve">
    <value>Acknowledgments</value>
  </data>
  <data name="RequirementsTextBlock.Text" xml:space="preserve">
    <value>Requirements</value>
  </data>
  <data name="UsefulLinksTextBlock.Text" xml:space="preserve">
    <value>Useful links</value>
  </data>
  <data name="ReportABugTextBlock.Text" xml:space="preserve">
    <value>Report a problem</value>
  </data>
  <data name="DonateTextBlock.Text" xml:space="preserve">
    <value>Donate</value>
  </data>
  <data name="DeveloperChannelTextBlock.Text" xml:space="preserve">
    <value>Join developer telegram channel</value>
  </data>
  <data name="DeveloperChannelTipTextBlock.Text" xml:space="preserve">
    <value>News, announcements</value>
  </data>
  <data name="ProxySettingsCard.Header" xml:space="preserve">
    <value>Setup proxy</value>
  </data>
  <data name="ProxyWindowTitleTextBlock.Text" xml:space="preserve">
    <value>Setup proxy</value>
  </data>
  <data name="ProxyWindowTitle" xml:space="preserve">
    <value>Setup proxy</value>
  </data>
  <data name="ExceptionSystemProxySet" xml:space="preserve">
    <value>Program cannot save your proxy settings, because exception happens. 
Make sure program has read/write permissions for key group "{0}" and check your system files via `sfc` utility
Additional info: 
{1}</value>
  </data>
  <data name="ProxySetupCompleteTextBlock.Text" xml:space="preserve">
    <value>Proxy setup complete</value>
  </data>
  <data name="ProxySetupCompleteTipTextBlock.Text" xml:space="preserve">
    <value>This way to run proxy-like components will be register by default. To change it open this wizard again.

Click "Exit" to close this wizard.</value>
  </data>
  <data name="ExceptionProxySet" xml:space="preserve">
    <value>Program cannot save your proxy settings, because exception happens. 
Additional info: 
{0}</value>
  </data>
  <data name="ChooseExeFile" xml:space="preserve">
    <value>Choose executable file</value>
  </data>
  <data name="ProxiFyreModeWhiteList" xml:space="preserve">
    <value>Proxy traffic only for selected applications</value>
  </data>
  <data name="ProxiFyreModeBlackList" xml:space="preserve">
    <value>Proxy traffic for the entire system except selected applications</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="AcceptLicenseContentDialog.Title" xml:space="preserve">
    <value>License Agreement</value>
  </data>
  <data name="AcceptLicenseCheckBox.Content" xml:space="preserve">
    <value>Accept all</value>
  </data>
  <data name="AcceptLicenseContentDialog.PrimaryButtonText" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="AcceptLicenseContentDialog.SecondaryButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="AcceptLicenseTipTextBlock.Text" xml:space="preserve">
    <value>To install this item, you must accept the following third-party License Agreements:</value>
  </data>
  <data name="ConnectingToService" xml:space="preserve">
    <value>Connecting to service...</value>
  </data>
  <data name="ConnectingToServiceTip" xml:space="preserve">
    <value>If this action takes long, make sure application installed correctly</value>
  </data>
  <data name="EditApplicationListDialogTitle" xml:space="preserve">
    <value>Edit: {0}</value>
  </data>
  <data name="ApplicationWhiteList" xml:space="preserve">
    <value>List of applications for which the proxy will be used</value>
  </data>
  <data name="ApplicationBlackList" xml:space="preserve">
    <value>List of applications for which the proxy will be never used</value>
  </data>
  <data name="SelectedAppsSettingsCardDescription" xml:space="preserve">
    <value>Selected apps: {0}</value>
  </data>
  <data name="AndMore" xml:space="preserve">
    <value>and {0} more.</value>
  </data>
  <data name="ApplicationListIsEmpty" xml:space="preserve">
    <value>You don't add any application in this list yet.</value>
  </data>
  <data name="SetupProxyLikeComponentsTextBlock.Text" xml:space="preserve">
    <value>Setup proxy-like components</value>
  </data>
  <data name="SetupProxyLikeComponentsTipTextBlock.Text" xml:space="preserve">
    <value>This setting will be appears to all proxy-like components you installed</value>
  </data>
  <data name="SetupForEntireSystemCard.Header" xml:space="preserve">
    <value>Setup for entire system</value>
  </data>
  <data name="SetupForEntireSystemCard.Description" xml:space="preserve">
    <value>Supports only TCP connections, appears to entire system</value>
  </data>
  <data name="SetupViaProxifyreCard.Header" xml:space="preserve">
    <value>Setup via ProxiFyre</value>
  </data>
  <data name="SetupViaProxifyreCard.Description" xml:space="preserve">
    <value>Supports TCP and UDP connections, appears only for selected applications</value>
  </data>
  <data name="SetupProxyManuallyCard.Header" xml:space="preserve">
    <value>Do not prefer any actions</value>
  </data>
  <data name="SetupForEntireSystemTextBlock.Text" xml:space="preserve">
    <value>Setup for entire system</value>
  </data>
  <data name="ProxyIpAddressTextBlock.Text" xml:space="preserve">
    <value>Proxy IP address</value>
  </data>
  <data name="PortTextBlock.Text" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="ResetByDefaultButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Reset by default</value>
  </data>
  <data name="RegProxyWhiteListTextBlock.Text" xml:space="preserve">
    <value>Do not use proxies for addresses that begin with the following entries. Use semicolons (;) to separate addresses.</value>
  </data>
  <data name="BypassLocalCheckBox.Content" xml:space="preserve">
    <value>Do not use proxy for local (intranet) addresses</value>
  </data>
  <data name="SetupViaProxiFyreTextBlock.Text" xml:space="preserve">
    <value>Setup via ProxiFyre</value>
  </data>
  <data name="ProxiFyreModeCard.Header" xml:space="preserve">
    <value>ProxiFyre mode</value>
  </data>
  <data name="ApplicationWhiteListCard.Header" xml:space="preserve">
    <value>List of applications for which the proxy will be used</value>
  </data>
  <data name="ApplicationBlackListCard.Header" xml:space="preserve">
    <value>List of applications for which the proxy will be never used</value>
  </data>
  <data name="ProxyAddrSettingsTextBlock.Text" xml:space="preserve">
    <value>Proxy address settings</value>
  </data>
  <data name="AddClassicApplicationTextBlock.Text" xml:space="preserve">
    <value>Add a classic Win32 application</value>
  </data>
  <data name="AddClassicApplicationTipTextBlock.Text" xml:space="preserve">
    <value>Type executable name or select .EXE file path</value>
  </data>
  <data name="FileChooseButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select executable file</value>
  </data>
  <data name="AddUniversalApplicationTextBlock.Text" xml:space="preserve">
    <value>Add universal application</value>
  </data>
  <data name="AddUniversalApplicationTipTextBlock.Text" xml:space="preserve">
    <value>Select universal application folder or type path manually</value>
  </data>
  <data name="FolderChooseButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select universal application folder...</value>
  </data>
  <data name="AddApplicationButton.Content" xml:space="preserve">
    <value>Add application</value>
  </data>
  <data name="CloseButton.Content" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ApplicationListTextBlock.Text" xml:space="preserve">
    <value>Application list</value>
  </data>
  <data name="SetupProxyManuallyCardTextBlock.Text" xml:space="preserve">
    <value>Setup manually</value>
  </data>
  <data name="UseConfigSettingsCheckBox.Content" xml:space="preserve">
    <value>Prefer config setting to start proxy</value>
  </data>
  <data name="AutoCorrectError" xml:space="preserve">
    <value>AutoCorrect exception happens</value>
  </data>
  <data name="StoreShowItemFolder.Text" xml:space="preserve">
    <value>Show local files</value>
  </data>
  <data name="DeveloperNotCommentedRelease" xml:space="preserve">
    <value>Developer did not leave a comment for this release.</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="HideToTrayOnStartupCard.Header" xml:space="preserve">
    <value>Hide application in system tray and run current component when launched from the "Start" menu</value>
  </data>
</root>